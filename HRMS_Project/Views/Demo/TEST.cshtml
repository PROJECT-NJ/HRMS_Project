@{
    ViewData["Title"] = "TEST";
    Layout = "";
}

<h2>TEST</h2>

<input type=file id=f>
<button onclick="Create()">test</button>

<script type="text/javascript">

    f.onchange = function () {
        var zip = new JSZip();
        console.log(this.files[0]);
        zip.loadAsync(this.files[0] /* = file blob */)

            .then(function (zip) {
                alert("OK");
                console.log(zip.files);
                console.log(zip.files["Hello.txt"]._data);
                console.log(zip.files["testText.txt"]._data);
                console.log(zip.files["testXml.xlsx"]._data);
                var stringDataTextHello = new TextDecoder("utf-8").decode(zip.files["Hello.txt"]._data.compressedContent);
                var stringDataText = new TextDecoder("utf-8").decode(zip.files["testText.txt"]._data.compressedContent);
                var stringDataXml = new TextDecoder("utf-8").decode(zip.files["testXml.xlsx"]._data.compressedContent);
                console.log(stringDataTextHello);
                console.log(stringDataText);
                console.log(stringDataXml);
                console.log(Utf8ArrayToStr(zip.files["Hello.txt"]._data.compressedContent));
                console.log(Utf8ArrayToStr(zip.files["testText.txt"]._data.compressedContent));
                console.log(Utf8ArrayToStr(zip.files["testXml.xlsx"]._data.compressedContent));

            }, function () {
                alert("Not a valid zip file")
            });





    }

    function Create() {
        var zip = new JSZip();
           zip.file("testText.txt", "Hello best");
        zip.file("Hello.txt", "Hello World\n");
            zip.file("testXml.xlsx", "Hello World\n");
        //var img = zip.folder("images");
        //img.file("smile.gif", imgData, { base64: true });
        zip.generateAsync({ type: "blob" })
            .then(function (content) {
                // see FileSaver.js
                saveAs(content, "test.zip");
            });
    }

    function Utf8ArrayToStr(array) {
        var out, i, len, c;
        var char2, char3;

        out = "";
        len = array.length;
        i = 0;
        while (i < len) {
            c = array[i++];
            switch (c >> 4) {
                case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:
                    // 0xxxxxxx
                    out += String.fromCharCode(c);
                    break;
                case 12: case 13:
                    // 110x xxxx   10xx xxxx
                    char2 = array[i++];
                    out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));
                    break;
                case 14:
                    // 1110 xxxx  10xx xxxx  10xx xxxx
                    char2 = array[i++];
                    char3 = array[i++];
                    out += String.fromCharCode(((c & 0x0F) << 12) |
                        ((char2 & 0x3F) << 6) |
                        ((char3 & 0x3F) << 0));
                    break;
            }
        }

        return out;
    }

</script>

@*
<script src="https://cdn.jsdelivr.net/npm/zip-loader@1.1.0/dist/ZipLoader.min.js"></script>*@

<script type="text/javascript" src="~/js/JSzip/FileSaver.js"></script>

<script src="~/js/JSzip/jszip.js"></script>
<script src="~/js/JSzip/jszip.min.js"></script>
<script src="~/js/JSzip/jszip-utils.js"></script>
<script src="~/js/JSzip/jszip-utils.min.js"></script>




