#pragma checksum "D:\project\test\HRMS_Project\HRMS_Project\Views\Demo\buttons.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "845a16e6a84979ca2ec937e03ae7736ac9563623"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Demo_buttons), @"mvc.1.0.view", @"/Views/Demo/buttons.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Demo/buttons.cshtml", typeof(AspNetCore.Views_Demo_buttons))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\project\test\HRMS_Project\HRMS_Project\Views\_ViewImports.cshtml"
using HRMS_Project;

#line default
#line hidden
#line 2 "D:\project\test\HRMS_Project\HRMS_Project\Views\_ViewImports.cshtml"
using HRMS_Project.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"845a16e6a84979ca2ec937e03ae7736ac9563623", @"/Views/Demo/buttons.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"90cd28ea7ae3be7cb71c23c2f3ed97e506f18060", @"/Views/_ViewImports.cshtml")]
    public class Views_Demo_buttons : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-inline mr-auto w-100 navbar-search"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("page-top"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("padding-top: 0px; padding-bottom: 0px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\project\test\HRMS_Project\HRMS_Project\Views\Demo\buttons.cshtml"
  
    ViewData["Title"] = "buttons";

#line default
#line hidden
            BeginContext(45, 39, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n");
            EndContext();
            BeginContext(84, 23109, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e22fd95cf2b142979d29cadd629818bc", async() => {
                BeginContext(151, 561, true);
                WriteLiteral(@"

    <!-- Content Wrapper -->
    <div id=""content-wrapper"" class=""d-flex flex-column"">
        <!-- Main Content -->
        <div id=""content"">
            <!-- Topbar -->
            <nav class=""navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow"">
                <!-- Sidebar Toggle (Topbar) -->
                <button id=""sidebarToggleTop"" class=""btn btn-link d-md-none rounded-circle mr-3"">
                    <i class=""fa fa-bars""></i>
                </button>
                <!-- Topbar Search -->
                ");
                EndContext();
                BeginContext(712, 645, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a3bd435460064cd69fc9eb1afcb57b55", async() => {
                    BeginContext(813, 537, true);
                    WriteLiteral(@"
                    <div class=""input-group"">
                        <input type=""text"" class=""form-control bg-light border-0 small"" placeholder=""Search for..."" aria-label=""Search"" aria-describedby=""basic-addon2"">
                        <div class=""input-group-append"">
                            <button class=""btn btn-primary"" type=""button"">
                                <i class=""fas fa-search fa-sm""></i>
                            </button>
                        </div>
                    </div>
                ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1357, 720, true);
                WriteLiteral(@"
                <!-- Topbar Navbar -->
                <ul class=""navbar-nav ml-auto"">
                    <!-- Nav Item - Search Dropdown (Visible Only XS) -->
                    <li class=""nav-item dropdown no-arrow d-sm-none"">
                        <a class=""nav-link dropdown-toggle"" href=""#"" id=""searchDropdown"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                            <i class=""fas fa-search fa-fw""></i>
                        </a>
                        <!-- Dropdown - Messages -->
                        <div class=""dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in"" aria-labelledby=""searchDropdown"">
                            ");
                EndContext();
                BeginContext(2077, 706, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c79a4d1208e402e92d06563efa8bcd3", async() => {
                    BeginContext(2131, 645, true);
                    WriteLiteral(@"
                                <div class=""input-group"">
                                    <input type=""text"" class=""form-control bg-light border-0 small"" placeholder=""Search for..."" aria-label=""Search"" aria-describedby=""basic-addon2"">
                                    <div class=""input-group-append"">
                                        <button class=""btn btn-primary"" type=""button"">
                                            <i class=""fas fa-search fa-sm""></i>
                                        </button>
                                    </div>
                                </div>
                            ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2783, 20403, true);
                WriteLiteral(@"
                        </div>
                    </li>
                    <!-- Nav Item - Alerts -->
                    <li class=""nav-item dropdown no-arrow mx-1"">
                        <a class=""nav-link dropdown-toggle"" href=""#"" id=""alertsDropdown"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                            <i class=""fas fa-bell fa-fw""></i>
                            <!-- Counter - Alerts -->
                            <span class=""badge badge-danger badge-counter"">3+</span>
                        </a>
                        <!-- Dropdown - Alerts -->
                        <div class=""dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in"" aria-labelledby=""alertsDropdown"">
                            <h6 class=""dropdown-header"">
                                Alerts Center
                            </h6>
                            <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                 ");
                WriteLiteral(@"               <div class=""mr-3"">
                                    <div class=""icon-circle bg-primary"">
                                        <i class=""fas fa-file-alt text-white""></i>
                                    </div>
                                </div>
                                <div>
                                    <div class=""small text-gray-500"">December 12, 2019</div>
                                    <span class=""font-weight-bold"">A new monthly report is ready to download!</span>
                                </div>
                            </a>
                            <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                <div class=""mr-3"">
                                    <div class=""icon-circle bg-success"">
                                        <i class=""fas fa-donate text-white""></i>
                                    </div>
                                </div>
                                <div>
 ");
                WriteLiteral(@"                                   <div class=""small text-gray-500"">December 7, 2019</div>
                                    $290.29 has been deposited into your account!
                                </div>
                            </a>
                            <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                <div class=""mr-3"">
                                    <div class=""icon-circle bg-warning"">
                                        <i class=""fas fa-exclamation-triangle text-white""></i>
                                    </div>
                                </div>
                                <div>
                                    <div class=""small text-gray-500"">December 2, 2019</div>
                                    Spending Alert: We've noticed unusually high spending for your account.
                                </div>
                            </a>
                            <a class=""dropdown-item text-center ");
                WriteLiteral(@"small text-gray-500"" href=""#"">Show All Alerts</a>
                        </div>
                    </li>
                    <!-- Nav Item - Messages -->
                    <li class=""nav-item dropdown no-arrow mx-1"">
                        <a class=""nav-link dropdown-toggle"" href=""#"" id=""messagesDropdown"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                            <i class=""fas fa-envelope fa-fw""></i>
                            <!-- Counter - Messages -->
                            <span class=""badge badge-danger badge-counter"">7</span>
                        </a>
                        <!-- Dropdown - Messages -->
                        <div class=""dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in"" aria-labelledby=""messagesDropdown"">
                            <h6 class=""dropdown-header"">
                                Message Center
                            </h6>
                            <a class=""dropdo");
                WriteLiteral(@"wn-item d-flex align-items-center"" href=""#"">
                                <div class=""dropdown-list-image mr-3"">
                                    <img class=""rounded-circle"" src=""https://source.unsplash.com/fn_BT9fwg_E/60x60"" alt="""">
                                    <div class=""status-indicator bg-success""></div>
                                </div>
                                <div class=""font-weight-bold"">
                                    <div class=""text-truncate"">Hi there! I am wondering if you can help me with a problem I've been having.</div>
                                    <div class=""small text-gray-500"">Emily Fowler · 58m</div>
                                </div>
                            </a>
                            <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                <div class=""dropdown-list-image mr-3"">
                                    <img class=""rounded-circle"" src=""https://source.unsplash.com/AU4VPcFN4LE/60x60");
                WriteLiteral(@""" alt="""">
                                    <div class=""status-indicator""></div>
                                </div>
                                <div>
                                    <div class=""text-truncate"">I have the photos that you ordered last month, how would you like them sent to you?</div>
                                    <div class=""small text-gray-500"">Jae Chun · 1d</div>
                                </div>
                            </a>
                            <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                <div class=""dropdown-list-image mr-3"">
                                    <img class=""rounded-circle"" src=""https://source.unsplash.com/CS2uCrpNzJY/60x60"" alt="""">
                                    <div class=""status-indicator bg-warning""></div>
                                </div>
                                <div>
                                    <div class=""text-truncate"">Last month's report looks gr");
                WriteLiteral(@"eat, I am very happy with the progress so far, keep up the good work!</div>
                                    <div class=""small text-gray-500"">Morgan Alvarez · 2d</div>
                                </div>
                            </a>
                            <a class=""dropdown-item d-flex align-items-center"" href=""#"">
                                <div class=""dropdown-list-image mr-3"">
                                    <img class=""rounded-circle"" src=""https://source.unsplash.com/Mv9hjnEUHR4/60x60"" alt="""">
                                    <div class=""status-indicator bg-success""></div>
                                </div>
                                <div>
                                    <div class=""text-truncate"">Am I a good boy? The reason I ask is because someone told me that people say this to all dogs, even if they aren't good...</div>
                                    <div class=""small text-gray-500"">Chicken the Dog · 2w</div>
                                </di");
                WriteLiteral(@"v>
                            </a>
                            <a class=""dropdown-item text-center small text-gray-500"" href=""#"">Read More Messages</a>
                        </div>
                    </li>
                    <div class=""topbar-divider d-none d-sm-block""></div>
                    <!-- Nav Item - User Information -->
                    <li class=""nav-item dropdown no-arrow"">
                        <a class=""nav-link dropdown-toggle"" href=""#"" id=""userDropdown"" role=""button"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
                            <span class=""mr-2 d-none d-lg-inline text-gray-600 small"">Valerie Luna</span>
                            <img class=""img-profile rounded-circle"" src=""https://source.unsplash.com/QAB-WJcbgJk/60x60"">
                        </a>
                        <!-- Dropdown - User Information -->
                        <div class=""dropdown-menu dropdown-menu-right shadow animated--grow-in"" aria-labelledby=""userDropdown""");
                WriteLiteral(@">
                            <a class=""dropdown-item"" href=""#"">
                                <i class=""fas fa-user fa-sm fa-fw mr-2 text-gray-400""></i>
                                Profile
                            </a>
                            <a class=""dropdown-item"" href=""#"">
                                <i class=""fas fa-cogs fa-sm fa-fw mr-2 text-gray-400""></i>
                                Settings
                            </a>
                            <a class=""dropdown-item"" href=""#"">
                                <i class=""fas fa-list fa-sm fa-fw mr-2 text-gray-400""></i>
                                Activity Log
                            </a>
                            <div class=""dropdown-divider""></div>
                            <a class=""dropdown-item"" href=""#"" data-toggle=""modal"" data-target=""#logoutModal"">
                                <i class=""fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400""></i>
                                Logout
     ");
                WriteLiteral(@"                       </a>
                        </div>
                    </li>
                </ul>
            </nav>
            <!-- End of Topbar -->
            <!-- Begin Page Content -->
            <div class=""container-fluid"">
                <!-- Page Heading -->
                <h1 class=""h3 mb-4 text-gray-800"">Buttons</h1>
                <div class=""row"">
                    <div class=""col-lg-6"">
                        <!-- Circle Buttons -->
                        <div class=""card shadow mb-4"">
                            <div class=""card-header py-3"">
                                <h6 class=""m-0 font-weight-bold text-primary"">Circle Buttons</h6>
                            </div>
                            <div class=""card-body"">
                                <p>Use Font Awesome Icons (included with this theme package) along with the circle buttons as shown in the examples below!</p>
                                <!-- Circle Buttons (Default) -->
           ");
                WriteLiteral(@"                     <div class=""mb-2"">
                                    <code>.btn-circle</code>
                                </div>
                                <a href=""#"" class=""btn btn-primary btn-circle"">
                                    <i class=""fab fa-facebook-f""></i>
                                </a>
                                <a href=""#"" class=""btn btn-success btn-circle"">
                                    <i class=""fas fa-check""></i>
                                </a>
                                <a href=""#"" class=""btn btn-info btn-circle"">
                                    <i class=""fas fa-info-circle""></i>
                                </a>
                                <a href=""#"" class=""btn btn-warning btn-circle"">
                                    <i class=""fas fa-exclamation-triangle""></i>
                                </a>
                                <a href=""#"" class=""btn btn-danger btn-circle"">
                                    <i");
                WriteLiteral(@" class=""fas fa-trash""></i>
                                </a>
                                <!-- Circle Buttons (Small) -->
                                <div class=""mt-4 mb-2"">
                                    <code>.btn-circle .btn-sm</code>
                                </div>
                                <a href=""#"" class=""btn btn-primary btn-circle btn-sm"">
                                    <i class=""fab fa-facebook-f""></i>
                                </a>
                                <a href=""#"" class=""btn btn-success btn-circle btn-sm"">
                                    <i class=""fas fa-check""></i>
                                </a>
                                <a href=""#"" class=""btn btn-info btn-circle btn-sm"">
                                    <i class=""fas fa-info-circle""></i>
                                </a>
                                <a href=""#"" class=""btn btn-warning btn-circle btn-sm"">
                                    <i class=""fas fa-e");
                WriteLiteral(@"xclamation-triangle""></i>
                                </a>
                                <a href=""#"" class=""btn btn-danger btn-circle btn-sm"">
                                    <i class=""fas fa-trash""></i>
                                </a>
                                <!-- Circle Buttons (Large) -->
                                <div class=""mt-4 mb-2"">
                                    <code>.btn-circle .btn-lg</code>
                                </div>
                                <a href=""#"" class=""btn btn-primary btn-circle btn-lg"">
                                    <i class=""fab fa-facebook-f""></i>
                                </a>
                                <a href=""#"" class=""btn btn-success btn-circle btn-lg"">
                                    <i class=""fas fa-check""></i>
                                </a>
                                <a href=""#"" class=""btn btn-info btn-circle btn-lg"">
                                    <i class=""fas fa-info-circ");
                WriteLiteral(@"le""></i>
                                </a>
                                <a href=""#"" class=""btn btn-warning btn-circle btn-lg"">
                                    <i class=""fas fa-exclamation-triangle""></i>
                                </a>
                                <a href=""#"" class=""btn btn-danger btn-circle btn-lg"">
                                    <i class=""fas fa-trash""></i>
                                </a>
                            </div>
                        </div>
                        <!-- Brand Buttons -->
                        <div class=""card shadow mb-4"">
                            <div class=""card-header py-3"">
                                <h6 class=""m-0 font-weight-bold text-primary"">Brand Buttons</h6>
                            </div>
                            <div class=""card-body"">
                                <p>Google and Facebook buttons are available featuring each company's respective brand color. They are used on the user login a");
                WriteLiteral(@"nd registration pages.</p>
                                <p>You can create more custom buttons by adding a new color variable in the <code>_variables.scss</code> file and then using the Bootstrap button variant mixin to create a new style, as demonstrated in the <code>_buttons.scss</code> file.</p>
                                <a href=""#"" class=""btn btn-google btn-block""><i class=""fab fa-google fa-fw""></i> .btn-google</a>
                                <a href=""#"" class=""btn btn-facebook btn-block""><i class=""fab fa-facebook-f fa-fw""></i> .btn-facebook</a>
                            </div>
                        </div>
                    </div>
                    <div class=""col-lg-6"">
                        <div class=""card shadow mb-4"">
                            <div class=""card-header py-3"">
                                <h6 class=""m-0 font-weight-bold text-primary"">Split Buttons with Icon</h6>
                            </div>
                            <div class=""card-body"">");
                WriteLiteral(@"
                                <p>Works with any button colors, just use the <code>.btn-icon-split</code> class and the markup in the examples below. The examples below also use the <code>.text-white-50</code> helper class on the icons for additional styling, but it is not required.</p>
                                <a href=""#"" class=""btn btn-primary btn-icon-split"">
                                    <span class=""icon text-white-50"">
                                        <i class=""fas fa-flag""></i>
                                    </span>
                                    <span class=""text"">Split Button Primary</span>
                                </a>
                                <div class=""my-2""></div>
                                <a href=""#"" class=""btn btn-success btn-icon-split"">
                                    <span class=""icon text-white-50"">
                                        <i class=""fas fa-check""></i>
                                    </span>
            ");
                WriteLiteral(@"                        <span class=""text"">Split Button Success</span>
                                </a>
                                <div class=""my-2""></div>
                                <a href=""#"" class=""btn btn-info btn-icon-split"">
                                    <span class=""icon text-white-50"">
                                        <i class=""fas fa-info-circle""></i>
                                    </span>
                                    <span class=""text"">Split Button Info</span>
                                </a>
                                <div class=""my-2""></div>
                                <a href=""#"" class=""btn btn-warning btn-icon-split"">
                                    <span class=""icon text-white-50"">
                                        <i class=""fas fa-exclamation-triangle""></i>
                                    </span>
                                    <span class=""text"">Split Button Warning</span>
                                </a");
                WriteLiteral(@">
                                <div class=""my-2""></div>
                                <a href=""#"" class=""btn btn-danger btn-icon-split"">
                                    <span class=""icon text-white-50"">
                                        <i class=""fas fa-trash""></i>
                                    </span>
                                    <span class=""text"">Split Button Danger</span>
                                </a>
                                <div class=""my-2""></div>
                                <a href=""#"" class=""btn btn-secondary btn-icon-split"">
                                    <span class=""icon text-white-50"">
                                        <i class=""fas fa-arrow-right""></i>
                                    </span>
                                    <span class=""text"">Split Button Secondary</span>
                                </a>
                                <div class=""my-2""></div>
                                <a href=""#"" class=""bt");
                WriteLiteral(@"n btn-light btn-icon-split"">
                                    <span class=""icon text-gray-600"">
                                        <i class=""fas fa-arrow-right""></i>
                                    </span>
                                    <span class=""text"">Split Button Primary</span>
                                </a>
                                <div class=""mb-4""></div>
                                <p>Also works with small and large button classes!</p>
                                <a href=""#"" class=""btn btn-primary btn-icon-split btn-sm"">
                                    <span class=""icon text-white-50"">
                                        <i class=""fas fa-flag""></i>
                                    </span>
                                    <span class=""text"">Split Button Small</span>
                                </a>
                                <div class=""my-2""></div>
                                <a href=""#"" class=""btn btn-primary btn-icon-spl");
                WriteLiteral(@"it btn-lg"">
                                    <span class=""icon text-white-50"">
                                        <i class=""fas fa-flag""></i>
                                    </span>
                                    <span class=""text"">Split Button Large</span>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.container-fluid -->
        </div>
        <!-- End of Main Content -->
        <!-- Footer -->
        <footer class=""sticky-footer bg-white"">
            <div class=""container my-auto"">
                <div class=""copyright text-center my-auto"">
                    <span>Copyright &copy; Your Website 2019</span>
                </div>
            </div>
        </footer>
        <!-- End of Footer -->
    </div>
    <!-- End of Content Wrapper -->

");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(23193, 15, true);
            WriteLiteral("\r\n</html>\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
